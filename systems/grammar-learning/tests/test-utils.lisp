(in-package :grammar-learning)

(deftest test-diff-meaning-networks-irl ()
  (let ((network-1 '((query ?target-4 ?target-object-1 ?attribute-2)
                     (unique ?target-object-1 ?target-33324)
                     (filter ?target-33324 ?target-33323 ?size-4)
                     (filter ?target-33323 ?target-2 ?color-2)
                     (filter ?target-2 ?target-1 ?material-4)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (get-context ?source-1)
                     (bind attribute-category ?attribute-2 shape)
                     (bind size-category ?size-4 large)
                     (bind color-category ?color-2 gray)
                     (bind material-category ?material-4 metal)
                     (bind shape-category ?shape-8 thing)))
        (network-2 '((query ?target-4 ?target-object-1 ?attribute-2)
                     (unique ?target-object-1 ?target-2)
                     (filter ?target-2 ?target-1 ?size-4)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (get-context ?source-1)
                     (bind attribute-category ?attribute-2 shape)
                     (bind size-category ?size-4 large)
                     (bind shape-category ?shape-8 thing)))
        (network-3 '((query ?target-4 ?target-object-1 ?attribute-2)
                     (unique ?target-object-1 ?target-33324)
                     (filter ?target-33324 ?target-33323 ?size-4)
                     (filter ?target-33323 ?target-2 ?color-2)
                     (filter ?target-2 ?target-1 ?material-4)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (get-context ?source-1)
                     (bind attribute-category ?attribute-2 shape)
                     (bind size-category ?size-4 large)
                     (bind color-category ?color-2 blue)
                     (bind material-category ?material-4 metal)
                     (bind shape-category ?shape-8 thing)))
        (network-5 '((get-context ?source-1)
                     (filter ?target-39552 ?target-2 ?size-4)
                     (unique ?source-10 ?target-39552)
                     (bind color-category ?color-2 gray)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (bind attribute-category ?attribute-2 shape)
                     (bind shape-category ?shape-8 thing)
                     (filter ?target-2 ?target-1 ?color-2)
                     (bind size-category ?size-4 large)
                     (query ?target-8 ?source-10 ?attribute-2)))
        (network-6 '((get-context ?source-1)
                     (filter ?target-14197 ?target-2 ?size-2)
                     (unique ?source-10 ?target-14197)
                     (bind color-category ?color-16 gray)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (bind attribute-category ?attribute-2 material)
                     (bind shape-category ?shape-8 thing)
                     (filter ?target-2 ?target-1 ?color-16)
                     (bind size-category ?size-2 large)
                     (query ?target-8 ?source-10 ?attribute-2)))
        (network-7 '((get-context ?source-1)
                     (filter ?target-2 ?target-1 ?size-4)
                     (unique ?target-object-1 ?target-2)
                     (bind shape-category ?shape-8 thing)
                     (bind attribute-category ?attribute-4 color)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (bind size-category ?size-4 large)
                     (query ?target-4 ?target-object-1 ?attribute-4)))
        (network-8 '((filter ?target-39552 ?target-2 ?size-4)
                     (bind size-category ?size-4 large)))
        (result-7-vs-8 '(((CLEVR-WORLD:GET-CONTEXT GRAMMAR-LEARNING::?SOURCE-1)
                          (CLEVR-WORLD:FILTER GRAMMAR-LEARNING::?TARGET-1 GRAMMAR-LEARNING::?SOURCE-1 GRAMMAR-LEARNING::?SHAPE-8)
                          (CLEVR-WORLD:FILTER GRAMMAR-LEARNING::?TARGET-2 GRAMMAR-LEARNING::?TARGET-1 GRAMMAR-LEARNING::?SIZE-4)
                          (CLEVR-WORLD:UNIQUE GRAMMAR-LEARNING::?TARGET-OBJECT-1 GRAMMAR-LEARNING::?TARGET-2)
                          (CLEVR-WORLD:QUERY GRAMMAR-LEARNING::?TARGET-4 GRAMMAR-LEARNING::?TARGET-OBJECT-1 GRAMMAR-LEARNING::?ATTRIBUTE-4)
                          (CLEVR-WORLD:GET-CONTEXT GRAMMAR-LEARNING::?SOURCE-1)
                          (UTILS:BIND CLEVR-WORLD:SHAPE-CATEGORY GRAMMAR-LEARNING::?SHAPE-8 CLEVR-WORLD:THING)
                          (UTILS:BIND CLEVR-WORLD:SIZE-CATEGORY GRAMMAR-LEARNING::?SIZE-4 CLEVR-WORLD:LARGE)
                          (CLEVR-WORLD:GET-CONTEXT GRAMMAR-LEARNING::?SOURCE-1)
                          (UTILS:BIND CLEVR-WORLD:ATTRIBUTE-CATEGORY GRAMMAR-LEARNING::?ATTRIBUTE-4 CLEVR-WORLD:COLOR)) nil))
        (result-5-vs-6 '(((query ?target-8 ?source-10 ?attribute-2)
                         (bind attribute-category ?attribute-2 shape))
                         ((query ?target-8 ?source-10 ?attribute-2)
                          (bind attribute-category ?attribute-2 material))
                         ))
        (result-1-vs-2 '((filter ?target-2 ?target-1 ?material-4)
                         (filter ?target-33323 ?target-2 ?color-2)
                         (bind material-category ?material-4 metal)
                         (bind color-category ?color-2 gray)
                         ))
        (result-3-vs-1 '(((filter ?target-33323 ?target-2 ?color-2)
                          (bind color-category ?color-2 blue)
                          )
                         ((filter ?target-33323 ?target-2 ?color-2)
                          (bind color-category ?color-2 gray)
                          )))
        (result-1-vs-3 '(((filter ?target-33323 ?target-2 ?color-2)
                          (bind color-category ?color-2 gray))
                         ((filter ?target-33323 ?target-2 ?color-2)
                          (bind color-category ?color-2 blue)
                          ))))

    (test-equal (first (multiple-value-list (diff-meaning-networks network-1 network-2 :irl)))
                result-1-vs-2)
    (test-equal (second (multiple-value-list (diff-meaning-networks network-2 network-1 :irl)))
                result-1-vs-2)
    (test-equal (multiple-value-list (diff-meaning-networks network-1 network-3 :irl))
                result-1-vs-3)
    (test-equal (multiple-value-list (diff-meaning-networks network-3 network-1 :irl))
                result-3-vs-1)
    (test-equal (multiple-value-list (diff-meaning-networks network-5 network-6 :irl))
                result-5-vs-6)
    (test-equal (multiple-value-list (diff-meaning-networks network-7 network-8 :irl))
                result-7-vs-8)
    ))

(deftest test-diff-meaning-networks-amr ()    
  (test-equal (multiple-value-list (diff-meaning-networks
                                    '((:MODE GRAMMAR-LEARNING::?A GRAMMAR-LEARNING::EXPRESSIVE) (GRAMMAR-LEARNING::AH GRAMMAR-LEARNING::?A))
                                    '((:MODE GRAMMAR-LEARNING::?H GRAMMAR-LEARNING::EXPRESSIVE) (GRAMMAR-LEARNING::HUM GRAMMAR-LEARNING::?H)) :amr))
              '(((GRAMMAR-LEARNING::AH GRAMMAR-LEARNING::?A))
                ((GRAMMAR-LEARNING::HUM GRAMMAR-LEARNING::?H))))
  (test-equal (multiple-value-list (diff-meaning-networks
                                    '((:MODE GRAMMAR-LEARNING::?H GRAMMAR-LEARNING::EXPRESSIVE) (GRAMMAR-LEARNING::HUM GRAMMAR-LEARNING::?H) (GRAMMAR-LEARNING::OH GRAMMAR-LEARNING::?O))
                                    '((:MODE GRAMMAR-LEARNING::?H GRAMMAR-LEARNING::EXPRESSIVE) (GRAMMAR-LEARNING::HUM GRAMMAR-LEARNING::?H)) :amr))
              '(((GRAMMAR-LEARNING::OH GRAMMAR-LEARNING::?O)) nil))
  (test-equal (multiple-value-list (diff-meaning-networks
                                    '((table ?t) (paper ?p) (:under ?t ?p))
                                    '((table ?t) (paper ?p) (:under ?p ?t))
                                    :amr))
              '(((table ?t) (paper ?p) (:under ?t ?p))
                ((table ?t) (paper ?p) (:under ?p ?t))))
  )

                

    

(deftest test-commutative-irl-subset-diff()
  (let* ((network-1 '((bind material-category ?material-2 rubber)
                     (filter ?target-9839 ?source-1 ?shape-5228)
                     (bind color-category ?color-8 green)
                     (filter ?target-2 ?target-1 ?material-4)
                     (bind material-category ?material-4 metal)
                     ;(filter ?target-1 ?source-1 ?shape-2)
                     ;(bind shape-category ?shape-2 cube)
                     (bind shape-category ?shape-5228 cube)
                     (filter ?target-9842 ?target-2 ?color-8)
                     (bind size-category ?size-4 large)
                     (get-context ?source-1)
                     (filter ?target-9843 ?target-9842 ?size-4)
                     (filter ?target-9845 ?target-9839 ?material-2)
                     (count! ?count-5 ?target-9845)
                     (count! ?count-6 ?target-9843)
                     (less-than ?target-74 ?count-5 ?count-6)))
        (network-2 '((bind material-category ?material-2 rubber)
                     (filter ?target-9839 ?source-1 ?shape-5228)
                     (bind color-category ?color-8 green)
                     (filter ?target-2 ?target-1 ?material-4)
                     (bind material-category ?material-4 metal)
                     (filter ?target-1 ?source-1 ?shape-2)
                     (bind shape-category ?shape-2 cube)
                     (bind shape-category ?shape-5228 cube)
                     (filter ?target-9842 ?target-2 ?color-8)
                     (bind size-category ?size-4 large)
                     (get-context ?source-1)
                     (filter ?target-9843 ?target-9842 ?size-4)
                     (filter ?target-9845 ?target-9839 ?material-2)
                     (count! ?count-5 ?target-9845)
                     (count! ?count-6 ?target-9843)
                     (less-than ?target-74 ?count-5 ?count-6)))
        (network-3 '((get-context ?source-1)
                     (exist ?target-44 ?target-5444)
                     (bind size-category ?size-2 small)
                     (filter ?target-5443 ?target-2 ?color-10)
                     (bind material-category ?material-4 metal)
                     (filter ?target-1 ?source-1 ?shape-2)
                     (bind shape-category ?shape-2 cube)
                     (filter ?target-2 ?target-1 ?material-4)
                     (bind color-category ?color-10 brown)
                     (filter ?target-5444 ?target-5443 ?size-2)))
        (network-4 '((bind shape-category ?shape-2 cube)
                     (filter ?target-1 ?source-1 ?shape-2)))
        (result-1-vs-2 (multiple-value-list (commutative-irl-subset-diff network-2 network-1)))
        (result-3-vs-4 '(((filter ?target-5444 ?target-5443 ?size-2)
                          (bind color-category ?color-10 brown)
                          (filter ?target-2 ?target-1 ?material-4)
                          (bind material-category ?material-4 metal)
                          (filter ?target-5443 ?target-2 ?color-10)
                          (bind size-category ?size-2 small)
                          (exist ?target-44 ?target-5444)
                          (get-context ?source-1))
                         ((bind shape-category ?shape-2 cube)
                          (filter ?target-1 ?source-1 ?shape-2))))
        
        )

    (test-equal (multiple-value-list (commutative-irl-subset-diff network-1 network-2))
                (multiple-value-list (commutative-irl-subset-diff network-2 network-1)))
    (test-equal (multiple-value-list (commutative-irl-subset-diff network-3 network-4))
                result-3-vs-4)
                
    (test-assert (equivalent-irl-programs?
                   (append (first result-1-vs-2)
                           (second result-1-vs-2))
                network-2))))

(deftest test-extract-args-from-irl-network ()
  (let ((network-1 '((query ?target-4 ?target-object-1 ?attribute-2)
                     (unique ?target-object-1 ?target-33324)
                     (filter ?target-33324 ?target-33323 ?size-4)
                     (filter ?target-33323 ?target-2 ?color-2)
                     (filter ?target-2 ?target-1 ?material-4)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (get-context ?source-1)
                     (bind attribute-category ?attribute-2 shape)
                     (bind size-category ?size-4 large)
                     (bind color-category ?color-2 gray)
                     (bind material-category ?material-4 metal)
                     (bind shape-category ?shape-8 thing)))
        (network-2 '((bind material-category ?material-4 metal)
                     (bind color-category ?color-2 gray)
                     (filter ?target-2 ?target-1 ?material-4)
                     (filter ?target-33323 ?target-2 ?color-2)
                     ))
        (network-3 '((bind color-category ?color-2 blue)
                     (filter ?target-33323 ?target-2 ?color-2)))
        (network-4 '((filter ?target-140354 ?target-2 ?color-6)
                     (filter ?target-1 ?source-1 ?shape-6)
                     (bind color-category ?color-6 blue)
                     (bind shape-category ?shape-6 cylinder)))
        (network-5 '((filter ?target-1 ?source-1 ?shape-6)
                     (filter ?target-140354 ?target-2 ?color-6)
                     (bind shape-category ?shape-6 cylinder)
                     (bind color-category ?color-6 blue))))
                                
    (test-equal (extract-args-from-irl-network network-1) '(?target-4))
                       
    (test-equal (extract-args-from-irl-network network-2) '(?target-1 ?target-33323))
                       
    (test-equal (extract-args-from-irl-network network-3) '(?target-2 ?target-33323))
    (test-equal (extract-args-from-irl-network network-4) '(?target-2 ?source-1 ?target-140354 ?target-1))
    (test-equal (extract-args-from-irl-network network-5) '(?target-2 ?source-1 ?target-140354 ?target-1))))
                       
(deftest test-extract-vars-from-irl-network ()
  (let ((network-1 '((query ?target-4 ?target-object-1 ?attribute-2)
                     (unique ?target-object-1 ?target-33324)
                     (filter ?target-33324 ?target-33323 ?size-4)
                     (filter ?target-33323 ?target-2 ?color-2)
                     (filter ?target-2 ?target-1 ?material-4)
                     (filter ?target-1 ?source-1 ?shape-8)
                     (get-context ?source-1)
                     (bind attribute-category ?attribute-2 shape)
                     (bind size-category ?size-4 large)
                     (bind color-category ?color-2 gray)
                     (bind material-category ?material-4 metal)
                     (bind shape-category ?shape-8 thing)))
        (network-2 '((bind material-category ?material-4 metal)
                     (bind color-category ?color-2 gray)
                     (filter ?target-2 ?target-1 ?material-4)
                     (filter ?target-33323 ?target-2 ?color-2)
                     ))
        (network-3 '((bind color-category ?color-2 blue)
                     (filter ?target-33323 ?target-2 ?color-2))))
                                
    (test-equal (multiple-value-list (extract-vars-from-irl-network network-1)) '(nil ?target-4 nil))
                       
    (test-equal (multiple-value-list (extract-vars-from-irl-network network-2)) '(?target-1 ?target-33323 nil))
                       
    (test-equal (multiple-value-list (extract-vars-from-irl-network network-3)) '(?target-2 ?target-33323 nil))))

(defun test-diff-form-constraints ()
  (let ((network-1 '((STRING GRAMMAR-LEARNING::?HOW-180 "how")
                     (STRING GRAMMAR-LEARNING::?MANY-120 "many")
                     (STRING GRAMMAR-LEARNING::?BROWN-144 "brown")
                     (STRING GRAMMAR-LEARNING::?SHINY-216 "shiny")
                     (STRING GRAMMAR-LEARNING::?OBJECTS-56 "objects")
                     (STRING GRAMMAR-LEARNING::?ARE-357 "are")
                     (STRING GRAMMAR-LEARNING::?THERE-371 "there")
                     (FCG:MEETS GRAMMAR-LEARNING::?HOW-180 GRAMMAR-LEARNING::?MANY-120)
                     (FCG:MEETS GRAMMAR-LEARNING::?MANY-120 GRAMMAR-LEARNING::?BROWN-144)
                     (FCG:MEETS GRAMMAR-LEARNING::?BROWN-144 GRAMMAR-LEARNING::?SHINY-216)
                     (FCG:MEETS GRAMMAR-LEARNING::?SHINY-216 GRAMMAR-LEARNING::?OBJECTS-56)
                     (FCG:MEETS GRAMMAR-LEARNING::?OBJECTS-56 GRAMMAR-LEARNING::?ARE-357)
                     (FCG:MEETS GRAMMAR-LEARNING::?ARE-357 GRAMMAR-LEARNING::?THERE-371)))
        (network-2 '((STRING GRAMMAR-LEARNING::?HOW-185 "how")
                     (STRING GRAMMAR-LEARNING::?MANY-125 "many")
                     (STRING GRAMMAR-LEARNING::?BIG-259 "big")
                     (STRING GRAMMAR-LEARNING::?GREEN-101 "green")
                     (STRING GRAMMAR-LEARNING::?SHINY-221 "shiny")
                     (STRING GRAMMAR-LEARNING::?BLOCKS-50 "blocks")
                     (STRING GRAMMAR-LEARNING::?ARE-367 "are")
                     (STRING GRAMMAR-LEARNING::?THERE-381 "there")
                     (FCG:MEETS GRAMMAR-LEARNING::?HOW-185 GRAMMAR-LEARNING::?MANY-125)
                     (FCG:MEETS GRAMMAR-LEARNING::?MANY-125 GRAMMAR-LEARNING::?BIG-259)
                     (FCG:MEETS GRAMMAR-LEARNING::?BIG-259 GRAMMAR-LEARNING::?GREEN-101)
                     (FCG:MEETS GRAMMAR-LEARNING::?GREEN-101 GRAMMAR-LEARNING::?SHINY-221)
                     (FCG:MEETS GRAMMAR-LEARNING::?SHINY-221 GRAMMAR-LEARNING::?BLOCKS-50)
                     (FCG:MEETS GRAMMAR-LEARNING::?BLOCKS-50 GRAMMAR-LEARNING::?ARE-367)
                     (FCG:MEETS GRAMMAR-LEARNING::?ARE-367 GRAMMAR-LEARNING::?THERE-381))))
    (diff-networks network-1 network-2 )


  ))

;(test-commutative-irl-subset-diff)
;(test-diff-meaning-networks-irl)
;(test-diff-meaning-networks-amr)
;(test-extract-args-from-irl-network)
;(test-extract-vars-from-irl-network)
 



